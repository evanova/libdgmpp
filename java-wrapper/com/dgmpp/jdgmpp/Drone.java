/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.dgmpp.jdgmpp;

public class Drone extends Type {
  private transient long swigCPtr;

  protected Drone(long cPtr, boolean cMemoryOwn) {
    super(dgmppJNI.Drone_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Drone obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        dgmppJNI.delete_Drone(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static int getAnySquadronTag() {
    return dgmppJNI.Drone_anySquadronTag_get();
  }

  public void active(boolean active) {
    dgmppJNI.Drone_active__SWIG_0(swigCPtr, this, active);
  }

  public boolean active() {
    return dgmppJNI.Drone_active__SWIG_1(swigCPtr, this);
  }

  public Charge charge() {
    long cPtr = dgmppJNI.Drone_charge(swigCPtr, this);
    return (cPtr == 0) ? null : new Charge(cPtr, false);
  }

  public Drone.Squadron squadron() {
    return Drone.Squadron.swigToEnum(dgmppJNI.Drone_squadron(swigCPtr, this));
  }

  public long squadronSize() {
    return dgmppJNI.Drone_squadronSize(swigCPtr, this);
  }

  public int squadronTag() {
    return dgmppJNI.Drone_squadronTag(swigCPtr, this);
  }

  public Ship target() {
    long cPtr = dgmppJNI.Drone_target__SWIG_0(swigCPtr, this);
    return (cPtr == 0) ? null : new Ship(cPtr, false);
  }

  public void target(Ship target) {
    dgmppJNI.Drone_target__SWIG_1(swigCPtr, this, Ship.getCPtr(target), target);
  }

  public DamageVector volley() {
    return new DamageVector(dgmppJNI.Drone_volley(swigCPtr, this), true);
  }

  public DamagePerSecond dps() {
    return new DamagePerSecond(dgmppJNI.Drone_dps(swigCPtr, this), true);
  }

  public double optimal() {
    return dgmppJNI.Drone_optimal(swigCPtr, this);
  }

  public double falloff() {
    return dgmppJNI.Drone_falloff(swigCPtr, this);
  }

  public double accuracyScore() {
    return dgmppJNI.Drone_accuracyScore(swigCPtr, this);
  }

  public UnitsPerSecond miningYield() {
    return new UnitsPerSecond(dgmppJNI.Drone_miningYield(swigCPtr, this), true);
  }

  public UnitsPerSecond velocity() {
    return new UnitsPerSecond(dgmppJNI.Drone_velocity(swigCPtr, this), true);
  }

  public double cycleTime() {
    return dgmppJNI.Drone_cycleTime(swigCPtr, this);
  }

  public final static class Squadron {
    public final static Drone.Squadron none = new Drone.Squadron("none");
    public final static Drone.Squadron heavy = new Drone.Squadron("heavy");
    public final static Drone.Squadron light = new Drone.Squadron("light");
    public final static Drone.Squadron support = new Drone.Squadron("support");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Squadron swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Squadron.class + " with value " + swigValue);
    }

    private Squadron(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Squadron(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Squadron(String swigName, Squadron swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Squadron[] swigValues = { none, heavy, light, support };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
